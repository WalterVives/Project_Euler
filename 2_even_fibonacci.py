"""
Problem ID: 2
Author: Walter Vives
GitHub: https://github.com/WalterVives

Each new term in the Fibonacci sequence is generated by adding 
the previous two terms. By starting with 1 and 2, the first 10 
terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci
 sequence whose values do not exceed four million, find the sum 
 of the even-valued terms.
"""
def fibonacci_even(n=100, limit=4000000):
	"""
	Parameters: 
				> n: 
					 - int type
					 - A number to be the range
				> limit: 
					 - int type
					 - A number to be the limit of the fiboacci number.
	output:

				> Total sum of the even-valued terms less than the limit.

	Note: 
	if the limit is a large number you should change the n parameter to a
	number to be a range higher.

	The break statement will stop the foor loop to avoid unnecessary iterations.
	"""		
	a=1
	b=2
	total_sum = 0
	for i in range(n):
		# If a is even
		if not a > limit:
			if a % 2 == 0:
				total_sum += a
		if a > limit:
			break
		c = a + b
		# Swipe
		a = b 
		b = c
	return total_sum


def main():
	fib = fibonacci_even(100)
	print("Answer: ", fib)


if __name__ == "__main__":
	main()